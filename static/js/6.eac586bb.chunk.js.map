{"version":3,"sources":["components/Header.jsx","components/Education.jsx"],"names":["Header","props","title","className","Education","theme","useContext","ThemeContext","header","useState","data","setData","width","setWidth","mode","setMode","useEffect","fetch","endpoints","education","method","then","res","json","catch","err","window","innerWidth","style","hideControls","allowDynamicUpdate","useReadMore","items","cardHeight","primary","accentColor","secondary","education_card","cardBgColor","chronoTheme","cardForeColor","titleColor","map","icon","src","alt","borderRadius","height"],"mappings":"yHAAA,8BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAO,qBAAKC,UAAU,SAAQ,SAAED,GAClC,C,iJCuFiBE,UAnFf,SAAmBH,GACjB,IAAMI,EAAQC,qBAAWC,KACjBC,EAAWP,EAAXO,OACR,EAAwBC,mBAAS,MAAK,mBAA/BC,EAAI,KAAEC,EAAO,KACpB,EAA0BF,mBAAS,QAAO,mBAAnCG,EAAK,KAAEC,EAAQ,KACtB,EAAwBJ,mBAAS,wBAAuB,mBAAjDK,EAAI,KAAEC,EAAO,KAyBpB,OAvBAC,qBAAU,WAAO,IAAD,YACdC,MAAMC,IAAUC,UAAW,CACzBC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKX,EAAQW,EAAI,IAC1BE,OAAM,SAACC,GAAG,OAAKA,CAAG,KAEX,QAAN,EAAAC,cAAM,aAAN,EAAQC,YAAa,KACvBZ,EAAQ,aAGA,QAAN,EAAAW,cAAM,aAAN,EAAQC,YAAa,MAER,QAAN,EAAAD,cAAM,aAAN,EAAQC,aAAc,MAAa,QAAN,EAAAD,cAAM,aAAN,EAAQC,YAAa,IAD3Dd,EAAS,SAGM,QAAN,EAAAa,cAAM,aAAN,EAAQC,aAAc,MAAa,QAAN,EAAAD,cAAM,aAAN,EAAQC,YAAa,KAC3Dd,EAAS,QAETA,EAAS,OAEb,GAAG,IAGD,qCACE,cAAC,UAAM,CAACX,MAAOM,IACdE,EACC,cAAC,IAAI,UACH,qBAAKkB,MAAO,CAAEhB,SAAST,UAAU,4BAA2B,SAC1D,cAAC,IAAS,UACR,cAAC,IAAM,CACL0B,cAAY,EACZC,oBAAkB,EAClBC,aAAa,EACbC,MAAOtB,EAAKS,UACZc,WAAY,IACZnB,KAAMA,EACNT,MAAO,CACL6B,QAAS7B,EAAM8B,YACfC,UAAW/B,EAAMgC,eACjBC,YAAajC,EAAMkC,YAAYD,YAC/BE,cAAenC,EAAMkC,YAAYC,cACjCC,WAAYpC,EAAMkC,YAAYE,YAC9B,SAEF,qBAAKtC,UAAU,eAAc,SAC1BO,EAAKS,UAAUuB,KAAI,SAACvB,GAAS,OAC5BA,EAAUwB,KACR,qBAEEC,IAAKzB,EAAUwB,KAAKC,IACpBC,IAAK1B,EAAUwB,KAAKE,IACpBjB,MAAO,CACLkB,aAAc,MACdlC,MAAO,OACPmC,OAAQ,SANL5B,EAAUwB,KAAKC,KASpB,IAAI,cAQpB,cAAC,UAAe,MAIxB,C","file":"static/js/6.eac586bb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","  import React, { useEffect, useState, useContext } from 'react';\n  import { Chrono } from 'react-chrono';\n  import { Container } from 'react-bootstrap';\n  import PropTypes from 'prop-types';\n  import Fade from 'react-reveal';\n  import { ThemeContext } from 'styled-components';\n  import endpoints from '../constants/endpoints';\n  import Header from './Header';\n  import FallbackSpinner from './FallbackSpinner';\n  import '../css/education.css';\n\n  function Education(props) {\n    const theme = useContext(ThemeContext);\n    const { header } = props;\n    const [data, setData] = useState(null);\n    const [width, setWidth] = useState('50vw');\n    const [mode, setMode] = useState('VERTICAL_ALTERNATING');\n\n    useEffect(() => {\n      fetch(endpoints.education, {\n        method: 'GET',\n      })\n        .then((res) => res.json())\n        .then((res) => setData(res))\n        .catch((err) => err);\n\n      if (window?.innerWidth < 576) {\n        setMode('VERTICAL');\n      }\n\n      if (window?.innerWidth < 576) {\n        setWidth('90vw');\n      } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n        setWidth('90vw');\n      } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n        setWidth('75vw');\n      } else {\n        setWidth('50vw');\n      }\n    }, []);\n\n    return (\n      <>\n        <Header title={header} />\n        {data ? (\n          <Fade>\n            <div style={{ width }} className='section-content-container'>\n              <Container>\n                <Chrono\n                  hideControls\n                  allowDynamicUpdate\n                  useReadMore={false}\n                  items={data.education}\n                  cardHeight={200}\n                  mode={mode}\n                  theme={{\n                    primary: theme.accentColor,\n                    secondary: theme.education_card,\n                    cardBgColor: theme.chronoTheme.cardBgColor,\n                    cardForeColor: theme.chronoTheme.cardForeColor,\n                    titleColor: theme.chronoTheme.titleColor,\n                  }}\n                >\n                  <div className='chrono-icons'>\n                    {data.education.map((education) =>\n                      education.icon ? (\n                        <img\n                          key={education.icon.src}\n                          src={education.icon.src}\n                          alt={education.icon.alt}\n                          style={{\n                            borderRadius: '50%',\n                            width: '90px',\n                            height: '90px',\n                          }}\n                        />\n                      ) : null,\n                    )}\n                  </div>\n                </Chrono>\n              </Container>\n            </div>\n          </Fade>\n        ) : (\n          <FallbackSpinner />\n        )}\n      </>\n    );\n  }\n\n  Education.propTypes = {\n    header: PropTypes.string.isRequired,\n  };\n\n  export default Education;\n"],"sourceRoot":""}