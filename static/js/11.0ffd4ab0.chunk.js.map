{"version":3,"sources":["../node_modules/react-particles/esm/Particles.js","../node_modules/react-particles/esm/index.js","components/Particle.jsx"],"names":["defaultId","Particles","props","state","init","library","undefined","this","destroy","setState","nextProps","equal","refresh","then","tsParticles","loadParticles","width","height","className","canvasClassName","id","React","createElement","style","Object","assign","cb","container","current","loaded","_b","_a","defaultProps","url","loadJSON","load","_c","params","options","Component","Particle","particlesInit","useCallback","engine","console","log","loadFull","particlesLoaded"],"mappings":"oOAGMA,EAAY,cACGC,EAAS,kDAC1B,WAAYC,GAAO,MAKb,OALa,qBACf,cAAMA,IACDC,MAAQ,CACTC,MAAM,EACNC,aAASC,GACX,CACN,CAkEC,OAlEA,oCACD,WACSC,KAAKJ,MAAME,UAGhBE,KAAKJ,MAAME,QAAQG,UACnBD,KAAKE,SAAS,CACVJ,aAASC,IAEjB,GAAC,mCACD,SAAsBI,GAClB,OAAQC,IAAMD,EAAWH,KAAKL,MAClC,GAAC,gCACD,WACIK,KAAKK,SACT,GAAC,yBACD,WAAc,WACVL,KAAKK,UAAUC,MAAK,WAChB,6DACJ,GACJ,GAAC,+BACD,WAAoB,WAChB,gCAAC,4FACO,EAAKX,MAAME,KAAM,CAAF,+BACT,EAAKF,MAAME,KAAKU,KAAY,OAEtC,EAAKL,SAAS,CACVL,MAAM,GACT,gCAAE,wGACO,EAAKW,gBAAe,4CAC3B,0CARP,EAUJ,GAAC,kCACD,WACIR,KAAKC,SACT,GAAC,oBACD,WACI,MAA0DD,KAAKL,MAAvDc,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBAAiBC,EAAE,EAAFA,GACnD,OAAQC,IAAMC,cAAc,MAAO,CAAEJ,UAAWA,EAAWE,GAAIA,GAC3DC,IAAMC,cAAc,SAAU,CAAEJ,UAAWC,EAAiBI,MAAOC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGlB,KAAKL,MAAMqB,OAAQ,CAAEP,QAChHC,aAChB,GAAC,sEACD,wFACmB,OAAfV,KAAKC,UAAU,SACTD,KAAKQ,gBAAe,gDAC7B,kDAJA,IAIA,4EACD,kHAESR,KAAKJ,MAAMC,KAAM,CAAF,gDAcwH,GAXtIsB,EAAE,iDAAG,WAAOC,GAAS,2EAMpB,GALC,EAAKzB,MAAMyB,YACX,EAAKzB,MAAMyB,UAAUC,QAAUD,GAEnC,EAAKlB,SAAS,CACVJ,QAASsB,KAET,EAAKzB,MAAM2B,OAAQ,CAAF,+BACX,EAAK3B,MAAM2B,OAAOF,GAAU,2CAEzC,gBAVO,sCAWFP,EAAgG,QAA1FU,EAA8B,QAAxBC,EAAKxB,KAAKL,MAAMkB,UAAuB,IAAPW,EAAgBA,EAAK9B,EAAU+B,aAAaZ,UAAuB,IAAPU,EAAgBA,EAAK9B,GAAuBO,KAAKL,MAAM+B,IAAG,iCAC5JnB,IAAYoB,SAASd,EAAIb,KAAKL,MAAM+B,KAAI,4DACxCnB,IAAYqB,KAAKf,EAAiC,QAA5BgB,EAAK7B,KAAKL,MAAMmC,cAA2B,IAAPD,EAAgBA,EAAK7B,KAAKL,MAAMoC,SAAQ,4BAFyC,OAATX,EAAY,EAAH,aAGjJD,EAAGC,GAAU,iDACtB,kDArBA,MAqBA,EAzEyB,CAASY,aA2EvCtC,EAAU+B,aAAe,CACrBhB,MAAO,OACPC,OAAQ,OACRqB,QAAS,CAAC,EACVf,MAAO,CAAC,EACRU,SAAK3B,EACLc,GAAIpB,GCpFOC,Q,gBC2BAuC,UAxBE,WACf,IAAMC,EAAgBC,sBAAW,iDAAC,WAAOC,GAAM,2EAK7C,OAJAC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,aAGZ,SACMC,YAASH,GAAQ,KAAD,sCACvB,mDAPgC,GAO9B,IAEGI,EAAkBL,sBAAW,iDAAC,WAAOf,GAAS,2FAC5CiB,QAAQC,IAAIlB,GAAW,KAAD,sCAC7B,mDAFkC,GAEhC,IAEH,OACE,cAAC,EAAS,CACRP,GAAG,cACHa,IAAI,gCACJ7B,KAAMqC,EACNZ,OAAQkB,GAGd,C","file":"static/js/11.0ffd4ab0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"fast-deep-equal/react\";\nconst defaultId = \"tsparticles\";\nexport default class Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        return !equal(nextProps, this.props);\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: Object.assign(Object.assign({}, this.props.style), { width,\n                    height }) })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        var _a, _b, _c;\n        if (!this.state.init) {\n            return;\n        }\n        const cb = async (container) => {\n            if (this.props.container) {\n                this.props.container.current = container;\n            }\n            this.setState({\n                library: container,\n            });\n            if (this.props.loaded) {\n                await this.props.loaded(container);\n            }\n        };\n        const id = (_b = (_a = this.props.id) !== null && _a !== void 0 ? _a : Particles.defaultProps.id) !== null && _b !== void 0 ? _b : defaultId, container = this.props.url\n            ? await tsParticles.loadJSON(id, this.props.url)\n            : await tsParticles.load(id, (_c = this.props.params) !== null && _c !== void 0 ? _c : this.props.options);\n        await cb(container);\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { useCallback } from 'react';\r\nimport Particles from 'react-particles';\r\nimport { loadFull } from 'tsparticles';\r\n\r\nconst Particle = () => {\r\n  const particlesInit = useCallback(async (engine) => {\r\n    console.log(engine);\r\n    console.log('Particles');\r\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n    // starting from v2 you can add only the features you need reducing the bundle size\r\n    await loadFull(engine);\r\n  }, []);\r\n\r\n  const particlesLoaded = useCallback(async (container) => {\r\n    await console.log(container);\r\n  }, []);\r\n\r\n  return (\r\n    <Particles\r\n      id='tsparticles'\r\n      url='http://foo.bar/particles.json'\r\n      init={particlesInit}\r\n      loaded={particlesLoaded}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Particle;\r\n\r\n// mode: \"grab\",\r\n// grab: {\r\n//   distance: 300,\r\n//   line_linked: {\r\n//     opacity: 0.5,\r\n//   },\r\n// },\r\n"],"sourceRoot":""}