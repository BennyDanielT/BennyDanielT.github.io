{"version":3,"sources":["components/NavBar.jsx","components/ThemeToggler.jsx"],"names":["styles","logoStyle","width","height","ExternalNavLink","styled","a","props","theme","navbarTheme","linkColor","linkHoverColor","accentColor","NavBarWithRouter","NavLink","linkActiveColor","withRouter","useContext","ThemeContext","useState","navbarData","data","expanded","setExpanded","navbarRef","useRef","useScrollPosition","currPos","y","current","classList","add","remove","fixed","bg","variant","ref","style","position","right","top","paddingBottom","color","href","src","logo","source","alt","borderRadius","Brand","Toggle","onClick","Collapse","id","className","sections","map","section","index","type","target","rel","title","activeClass","to","sectionId","spy","smooth","offset","duration","ThemeToggler","Consumer","values","marginBottom","onChange","darkMode","toggle","checked","value","size","defaultProps"],"mappings":"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","file":"static/js/20.0b17bcf9.chunk.js","sourcesContent":["import { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport endpoints from '../constants/endpoints';\r\nimport ThemeToggler from './ThemeToggler';\r\nimport '../css/navbar.css';\r\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\r\nimport { Link } from 'react-scroll';\r\nimport navbarData from './navbar.json'; // Import the JSON data\r\n\r\nconst styles = {\r\n  logoStyle: {\r\n    width: 100,\r\n    height: 400,\r\n  },\r\n};\r\n\r\nconst ExternalNavLink = styled.a`\r\n  color: ${(props) => props.theme.navbarTheme.linkColor};\r\n  &:hover {\r\n    color: ${(props) => props.theme.navbarTheme.linkHoverColor};\r\n  }\r\n  &::after {\r\n    background-color: ${(props) => props.theme.accentColor};\r\n  }\r\n`;\r\n\r\nconst InternalNavLink = styled(NavLink)`\r\n  color: ${(props) => props.theme.navbarTheme.linkColor};\r\n  &:hover {\r\n    color: ${(props) => props.theme.navbarTheme.linkHoverColor};\r\n  }\r\n  &::after {\r\n    background-color: ${(props) => props.theme.accentColor};\r\n  }\r\n  &.navbar__link--active {\r\n    color: ${(props) => props.theme.navbarTheme.linkActiveColor};\r\n  }\r\n`;\r\n\r\nconst NavBar = () => {\r\n  const theme = useContext(ThemeContext);\r\n  const [data, setData] = useState(navbarData);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const navbarRef = useRef(null);\r\n\r\n  useScrollPosition(({ currPos }) => {\r\n    if (currPos.y < 0) {\r\n      navbarRef.current.classList.add('scroll');\r\n    } else {\r\n      navbarRef.current.classList.remove('scroll');\r\n    }\r\n  });\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navbar\r\n          fixed='top'\r\n          // expand='md'\r\n          bg=''\r\n          variant='light'\r\n          ref={navbarRef}\r\n          // className='navbar-custom'\r\n          // expanded={expanded}\r\n          style={{\r\n            position: 'right',\r\n            right: '-1%',\r\n            top: '-2%',\r\n            paddingBottom: '-50%',\r\n            color: 'white',\r\n          }}\r\n        >\r\n          <a href='https://www.github.com/BennyDanielT'>\r\n            <div\r\n            // style={{ position: 'absolute', top: '-10%', left: '1%' }}\r\n            >\r\n              <img\r\n                src={data?.logo?.source}\r\n                // className='brand-logo'\r\n                alt='main logo'\r\n                style={\r\n                  data?.logo?.height && data?.logo?.width\r\n                    ? {\r\n                        height: 100,\r\n                        width: 125,\r\n                        borderRadius: data?.logo?.borderRadius,\r\n                      }\r\n                    : styles.logoStyle\r\n                }\r\n              />\r\n            </div>\r\n          </a>\r\n          <Container>\r\n            {data?.logo && (\r\n              <Navbar.Brand href='https://github.com/BennyDanielT'></Navbar.Brand>\r\n            )}\r\n            <Navbar.Toggle\r\n              aria-controls='responsive-navbar-nav'\r\n              onClick={() => setExpanded(!expanded)}\r\n            />\r\n            <Navbar.Collapse id='responsive-navbar-nav'>\r\n              <Nav className='me-auto' />\r\n              <Nav>\r\n                {data &&\r\n                  data.sections?.map((section, index) =>\r\n                    section?.type === 'link' ? (\r\n                      <ExternalNavLink\r\n                        key={section.title}\r\n                        href={section.href}\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                        onClick={() => setExpanded(false)}\r\n                        className='navbar__link'\r\n                        theme={theme}\r\n                      >\r\n                        {section.title}\r\n                      </ExternalNavLink>\r\n                    ) : (\r\n                      <Link\r\n                        key={section.title}\r\n                        activeClass='active' // CSS class for the active link\r\n                        to={section.sectionId}\r\n                        spy={true} // Enable spy mode, highlights the section in the viewport\r\n                        smooth={true} // Enable smooth scrolling\r\n                        offset={-70} // Offset to account for the fixed Navbar height\r\n                        duration={700} // Duration of the scroll animation\r\n                        onClick={() => setExpanded(false)}\r\n                        className='navbar__link'\r\n                        theme={theme}\r\n                      >\r\n                        {section.title}\r\n                      </Link>\r\n                      // <InternalNavLink\r\n                      //   key={section.title}\r\n                      //   onClick={() => setExpanded(false)}\r\n                      //   exact={index === 0}\r\n                      //   activeClassName='navbar__link--active'\r\n                      //   className='navbar__link'\r\n                      //   to={section.href}\r\n                      //   theme={theme}\r\n                      // >\r\n                      //   {section.title}\r\n                      // </InternalNavLink>\r\n                    ),\r\n                  )}\r\n              </Nav>\r\n              {/* <ThemeToggler onClick={() => setExpanded(false)} /> */}\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NavBarWithRouter = withRouter(NavBar);\r\nexport default NavBarWithRouter;\r\n","import React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\n\nfunction ThemeToggler(props) {\n  const { onClick } = props;\n  const handleOnChange = (darkMode) => {\n    darkMode.toggle();\n    onClick();\n  };\n\n  return (\n    <>\n      <AppContext.Consumer>\n        {(values) => (\n          <div style={{ marginBottom: 2}}>\n            <DarkModeToggle\n              onChange={() => handleOnChange(values.darkMode)}\n              checked={values.darkMode.value}\n              size={50}\n            />\n          </div>\n        )}\n      </AppContext.Consumer>\n    </>\n  );\n}\n\nThemeToggler.propTypes = {\n  onClick: PropTypes.func,\n};\nThemeToggler.defaultProps = {\n  onClick: () => {},\n};\n\nexport default ThemeToggler;\n"],"sourceRoot":""}