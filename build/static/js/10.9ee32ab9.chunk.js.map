{"version":3,"sources":["../node_modules/react-bootstrap/esm/Container.js","components/Header.jsx","components/Skills.jsx"],"names":["Container","React","ref","bsPrefix","fluid","as","Component","className","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","defaultProps","Header","title","styles","iconStyle","height","width","margin","marginBottom","introTextContainer","whiteSpace","skills_data","intro","skills","items","icon","Skills","header","useEffect","fetch","endpoints","method","then","res","json","catch","err","style","children","map","rows","item","display","src","alt"],"mappings":"8NAOMA,EAAyBC,cAAiB,WAO7CC,GAAQ,IANTC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAAK,IAELC,GAAIC,OAAS,IAAG,QAAK,EACrBC,EAAS,EAATA,UACGC,EAAK,iBAEFC,EAASC,YAAmBP,EAAU,aACtCQ,EAA0B,kBAAVP,EAAqB,IAAH,OAAOA,GAAU,SACzD,OAAoBQ,cAAKN,EAAW,yBAClCJ,IAAKA,GACFM,GAAK,IACRD,UAAWM,IAAWN,EAAWH,EAAQ,GAAH,OAAMK,GAAM,OAAGE,GAAWF,KAEpE,IACAT,EAAUc,YAAc,YACxBd,EAAUe,aApBW,CACnBX,OAAO,GAoBMJ,K,kCCzBf,8BAaegB,UATf,SAAgBR,GACd,IAAQS,EAAUT,EAAVS,MACR,OAAO,qBAAKV,UAAU,SAAQ,SAAEU,GAClC,C,kCCPA,qFASMC,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,aAAc,GAEhBC,mBAAoB,CAClBC,WAAY,aAIVC,EAAc,CAClBC,MACE,oMACFC,OAAQ,CACN,CACEX,MAAO,wBACPY,MAAO,CACL,CACEC,KAAM,yBACNb,MAAO,QAET,CACEa,KAAM,uBACNb,MAAO,cAET,CACEa,KAAM,2BACNb,MAAO,UAET,CACEa,KAAM,0BACNb,MAAO,SAET,CACEa,KAAM,0BACNb,MAAO,WAIb,CACEA,MAAO,4BACPY,MAAO,CACL,CACEC,KAAM,gCACNb,MAAO,WAET,CACEa,KAAM,0BACNb,MAAO,SAET,CACEa,KAAM,2BACNb,MAAO,UAET,CACEa,KAAM,8BACNb,MAAO,eAIb,CACEA,MAAO,oBACPY,MAAO,CACL,CACEC,KAAM,mCACNb,MAAO,kBAET,CACEa,KAAM,wBACNb,MAAO,OAET,CACEa,KAAM,2BACNb,MAAO,cAgEFc,UAzDf,SAAgBvB,GAAQ,IAAD,EAIMmB,EAHnBK,EAAWxB,EAAXwB,OAkBR,OATAC,qBAAU,WACRC,MAAMC,IAAUP,OAAQ,CACtBQ,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IAExBC,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGD,qCACE,cAAC,UAAM,CAACxB,MAAOe,IACdN,EACC,cAAC,IAAI,UACH,qBAAKnB,UAAU,4BAA2B,SACxC,eAAC,IAAS,YArBOoB,EAsBID,EAAYC,MArBzC,oBAAIe,MAAOxB,EAAOM,mBAAmB,SACnC,cAAC,IAAa,CAACmB,SAAUhB,OAqBE,QADkB,EACpCD,EAAYE,cAAM,aAAlB,EAAoBgB,KAAI,SAACC,GAAI,OAC5B,gCACE,uBACA,6BAAKA,EAAK5B,QACT4B,EAAKhB,MAAMe,KAAI,SAACE,GAAI,OACnB,sBAAsBJ,MAAO,CAAEK,QAAS,gBAAiB,UACvD,qBACEL,MAAOxB,EAAOC,UACd6B,IAAKF,EAAKhB,KACVmB,IAAKH,EAAK7B,QAEZ,4BAAI6B,EAAK7B,UAND6B,EAAK7B,MAOT,MAXA4B,EAAK5B,MAaT,WAMd,cAAC,UAAe,MAIxB,C","file":"static/js/10.9ee32ab9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal';\nimport { Container } from 'react-bootstrap';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 80,\n    margin: 10,\n    marginBottom: 0,\n  },\n  introTextContainer: {\n    whiteSpace: 'pre-wrap',\n  },\n};\n\nconst skills_data = {\n  intro:\n    'I love to learn new things and experiment with new technologies.\\nThese are some of the major languages, technologies, tools and platforms I have worked with, check out my Github page for more:',\n  skills: [\n    {\n      title: 'Languages & Databases',\n      items: [\n        {\n          icon: 'images/skills/java.png',\n          title: 'Java',\n        },\n        {\n          icon: 'images/skills/js.png',\n          title: 'JavaScript',\n        },\n        {\n          icon: 'images/skills/python.png',\n          title: 'Python',\n        },\n        {\n          icon: 'images/skills/nosql.png',\n          title: 'NoSQL',\n        },\n        {\n          icon: 'images/skills/mysql.png',\n          title: 'MySQL',\n        },\n      ],\n    },\n    {\n      title: 'Frameworks & Technologies',\n      items: [\n        {\n          icon: 'images/skills/android_new.png',\n          title: 'Android',\n        },\n        {\n          icon: 'images/skills/react.png',\n          title: 'React',\n        },\n        {\n          icon: 'images/skills/nodejs.png',\n          title: 'Nodejs',\n        },\n        {\n          icon: 'images/skills/terraform.png',\n          title: 'Terraform',\n        },\n      ],\n    },\n    {\n      title: 'Tools & Platforms',\n      items: [\n        {\n          icon: 'images/skills/android-studio.png',\n          title: 'Android Studio',\n        },\n        {\n          icon: 'images/skills/git.png',\n          title: 'Git',\n        },\n        {\n          icon: 'images/skills/docker.png',\n          title: 'Docker',\n        },\n      ],\n    },\n  ],\n};\n\nfunction Skills(props) {\n  const { header } = props;\n  // const [jsondata, setData] = useState(null);\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown children={intro} />\n    </h4>\n  );\n\n  useEffect(() => {\n    fetch(endpoints.skills, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      // .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {skills_data ? (\n        <Fade>\n          <div className='section-content-container'>\n            <Container>\n              {renderSkillsIntro(skills_data.intro)}\n              {skills_data.skills?.map((rows) => (\n                <div key={rows.title}>\n                  <br />\n                  <h3>{rows.title}</h3>\n                  {rows.items.map((item) => (\n                    <div key={item.title} style={{ display: 'inline-block' }}>\n                      <img\n                        style={styles.iconStyle}\n                        src={item.icon}\n                        alt={item.title}\n                      />\n                      <p>{item.title}</p>\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </Container>\n          </div>\n        </Fade>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n"],"sourceRoot":""}